# ===================================================================
# DeepLOB V5 修復配置 - 中等版
# 目標：修復 Class 1 Recall 極低問題（R=0.0003 → R>0.35）
# 策略：平衡採樣器 + 手動權重 + 網絡擴容
# ===================================================================

# ==================== 基礎配置 ====================
run:
  seed: 42

labels:
  num_classes: 3
  class_names: ["下跌", "持平", "上漲"]
  class_names_en: ["down", "stationary", "up"]
  class_ids: [0, 1, 2]
  format: "v5"

  weight_calculation:
    epsilon: 1.0e-6
    normalize: true

visualization:
  confusion_matrix:
    normalize: true
    dpi: 150
    figsize: [8, 6]
    cmap: "Blues"

data:
  train: "data/processed_v5/npz/stock_embedding_train.npz"
  val: "data/processed_v5/npz/stock_embedding_val.npz"
  test: "data/processed_v5/npz/stock_embedding_test.npz"
  norm_meta: "data/processed_v5/npz/normalization_meta.json"

  v5_labels: true
  y_raw_validation:
    enabled: true
    expected_values: [-1, 0, 1]

  use_sample_weights: true
  weights_normalize: "mean_to_1"
  use_stock_ids: false
  fail_on_missing_keys: true

# ==================== DataLoader 配置 - 關鍵修改！====================
dataloader:
  batch_size: 256  # 🔧 縮小 batch
  num_workers: 4
  pin_memory: true

  # 🔧 啟用平衡採樣器
  balance_sampler:
    enabled: true  # ✅ 強制每 batch 均衡
    strategy: "inv_freq"

# ==================== 模型配置 - 擴容！====================
model:
  arch: "DeepLOB"
  input:
    shape: [100, 20]
  num_classes: 3

  # 🔧 擴大網絡容量（32→48，增強表達能力）
  conv1_filters: 32
  conv2_filters: 32
  conv3_filters: 32
  lstm_hidden_size: 48  # ✅ 32→48（增強時序建模）
  fc_hidden_size: 48    # ✅ 32→48（增強分類能力）
  dropout: 0.4          # 🔧 降低 dropout（0.5→0.4，減少信息損失）

  embeddings:
    enabled: false

# ==================== 損失函數配置 - 手動權重！====================
loss:
  type: "ce"

  # 🔧 使用手動權重（針對性調整）
  class_weights: "manual"  # ✅ 手動指定

  # 手動權重設計：
  # - Class 0 (29.4%): 1.2 ← 提高（樣本少）
  # - Class 1 (45.0%): 1.0 ← 基準（避免過度壓制）
  # - Class 2 (25.6%): 1.3 ← 最高（樣本最少）
  # 策略：縮小權重差異，避免 Class 1 被過度懲罰
  manual_weights: [1.2, 1.0, 1.3]

  label_smoothing:
    global: 0.0
    flat_bonus: 0.00

# ==================== 優化器配置 ====================
optim:
  name: "adamw"
  lr: 0.00012  # 🔧 適度提高（0.00005→0.00012）
  weight_decay: 0.0003  # 🔧 降低正則化（0.0005→0.0003）
  grad_clip: 0.8  # 🔧 放寬裁剪（0.5→0.8，允許更大梯度）
  amp: false
  use_bf16: false
  betas: [0.9, 0.999]
  eps: 1.0e-8
  amsgrad: false

# ==================== 學習率調度器 ====================
sched:
  name: "cosine"
  warmup_ratio: 0.1  # 🔧 縮短預熱（0.15→0.1）
  eta_min: 1.0e-5    # 🔧 提高最小LR（5e-6→1e-5）

# ==================== 訓練配置 ====================
train:
  epochs: 40
  accumulate_steps: 1

  early_stop:
    metric: "val.f1_macro_unweighted"  # ✅ 未加權 F1
    patience: 10  # 🔧 延長耐心（8→10）
    mode: "max"

# ==================== 評估配置 ====================
eval:
  group_split:
    by_stock: true

  metrics:
    unweighted: ["acc", "f1_macro", "per_class_pr_rc", "confusion"]
    weighted: ["f1_macro", "loss"]

  breakdowns: ["reasons", "t_hit_bucket", "ret_quantile", "stock"]
  thit_buckets: [0, 5, 10, 20, 100]
  ret_quantiles: [0.8, 0.9, 0.95]

# ==================== 校準配置 ====================
calibration:
  enabled: true
  type: "temperature"
  opt_metric: "weighted_nll"
  lr: 0.01
  max_iter: 50

# ==================== 推理配置 ====================
inference:
  decision: "argmax"
  cost_matrix:
    path: null
  hold_threshold: 0.0

# ==================== 日誌配置 ====================
logging:
  dir: "logs/deeplob_v5_fix_moderate"
  save_best_by: "val.f1_macro_unweighted"

  artifacts:
    - "model"
    - "norm_meta"
    - "label_mapping"
    - "calibration"
    - "cost_matrix"
    - "metrics_json"
    - "logs_csv"
    - "confmat_png"

  wandb:
    enabled: false

# ==================== 安全檢查 ====================
safety_checks:
  validate_label_set: true
  validate_weights: true
  validate_norm_meta: true
  print_data_summary: true

# ==================== 硬件配置 ====================
hardware:
  device: "cuda"
  num_workers: 4
  pin_memory: true
  prefetch_factor: 2
  persistent_workers: true

# ==================== 續訓配置 ====================
resume:
  enabled: false
  checkpoint_path: "checkpoints/v5/deeplob_v5_best.pth"
  load_optimizer: true

# ==================== 其他配置 ====================
misc:
  save_last: true
  output_dir: "checkpoints/v5_fix_moderate"

# ===================================================================
# 修改總結（中等版）
# ===================================================================
# 1. ✅ 啟用平衡採樣器（同保守版）
# 2. ✅ 手動權重 [1.2, 1.0, 1.3]（縮小權重差異）
# 3. ✅ 擴大網絡容量（LSTM/FC 32→48）
# 4. ✅ 降低 dropout（0.5→0.4，減少信息損失）
# 5. ✅ 提高學習率（0.00005→0.00012）
# 6. ✅ 降低權重衰減（0.0005→0.0003）
# 7. ✅ 放寬梯度裁剪（0.5→0.8）
#
# 預期效果：
#   - Class 1 Recall: 0.0003 → 0.35-0.50
#   - 整體 F1: 可能略降（0.73→0.65-0.70），但更均衡
#   - 三類 Recall 更接近（理想：0.4-0.5 之間）
#
# 使用方法：
#   python scripts/train_deeplob_v5.py \
#       --config configs/train_v5_fix_moderate.yaml
# ===================================================================
