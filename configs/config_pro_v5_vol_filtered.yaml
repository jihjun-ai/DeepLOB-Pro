# V5 Pro - 波動率過濾配置
# 設計理念：排除波動率過低的股票日，改善標籤分布
version: "5.0.5-vol-filtered"
description: "啟用波動率過濾，排除波動率過低的股票日以改善「持平」標籤比例"

# ===================================================================
# 核心功能：波動率過濾
# ===================================================================
# 問題：波動率過低的股票日會導致：
#   1. PT/SL barrier 難以觸及（3.5σ 太寬）
#   2. 大量 time trigger → 「持平」標籤過多
#   3. 標籤分布不均（某些股票 >70% 是「持平」）
#
# 解決方案：在 sliding_windows_v5 中過濾低波動率的股票日
#   - 計算每日 EWMA 波動率的平均值
#   - 若低於閾值 → 跳過該股票日
#   - 保留波動率適中的股票日 → 標籤分布更均衡
# ===================================================================

# 日界線保護
respect_day_boundary: true

# 波動率設定
volatility:
  method: 'ewma'
  halflife: 60

# 【新增】波動率過濾（在 sliding_windows_v5 階段）
volatility_filter:
  enabled: true                    # 啟用波動率過濾
  min_daily_vol: 0.0005           # 最小日均波動率閾值（0.05%）
  # 說明：
  #   - 計算每個股票日的 EWMA 波動率平均值
  #   - 若 mean(vol) < 0.0005，則跳過該股票日
  #   - 建議範圍：0.0003-0.001（0.03%-0.1%）
  #   - 數值越大，過濾越嚴格，保留的數據越少

# 日內震盪過濾（在主程式階段，基於價格範圍）
intraday_volatility_filter:
  enabled: false                   # 可選：基於日內震盪幅度的過濾
  min_range_pct: 0.005            # 最小震盪幅度（0.5%）
  max_range_pct: 0.20             # 最大震盪幅度（20%，排除異常日）
  # 說明：
  #   - 基於 (high-low)/open 的震盪幅度
  #   - 與 volatility_filter 互補（一個看波動率，一個看價格範圍）

# Triple-Barrier 參數
triple_barrier:
  pt_multiplier: 3.5
  sl_multiplier: 3.5
  max_holding: 40
  min_return: 0.0015

# 樣本權重
sample_weights:
  enabled: true
  tau: 80.0
  return_scaling: 1.0
  balance_classes: true
  use_log_scale: true

# 輸出設定
output:
  save_meta: true
  save_weights: true
  compression: 'compressed'

# 資料處理參數
data:
  aggregation_factor: 10
  seq_len: 100
  alpha: 0.002
  horizons: [1, 2, 3, 5, 10]
  trading_start: 90000
  trading_end: 133000

# 資料切分
split:
  train_ratio: 0.7
  val_ratio: 0.15
  test_ratio: 0.15
  seed: 42

# ===================================================================
# 使用建議
# ===================================================================
#
# 1. 先分析當前波動率分布：
#    python scripts/extract_tw_stock_data_v5.py \
#        --input-dir ./data/temp \
#        --output-dir ./data/volatility_analysis \
#        --config configs/config_pro_v5_ml_optimal.yaml \
#        --stats-only
#
#    查看報告：./data/volatility_analysis/volatility_summary.json
#    找到波動率的 P25 或 P10 分位數作為參考
#
# 2. 設定 min_daily_vol：
#    - 保守（過濾少）：P10 分位數的 50%
#    - 中等（推薦）：P25 分位數
#    - 激進（過濾多）：P50 分位數
#
# 3. 生成過濾後的數據：
#    python scripts/extract_tw_stock_data_v5.py \
#        --input-dir ./data/temp \
#        --output-dir ./data/processed_v5_vol_filtered \
#        --config configs/config_pro_v5_vol_filtered.yaml
#
# 4. 檢查過濾效果：
#    查看 normalization_meta.json 中的：
#    - data_quality.volatility_filtered（過濾的股票日數）
#    - data_split.results.*.label_dist（標籤分布）
#
# ===================================================================
# 預期效果
# ===================================================================
#
# 啟用 min_daily_vol = 0.0005 時：
#   - 過濾約 10-30% 的低波動率股票日
#   - 「持平」標籤比例從 50% 降至 30-40%
#   - 下跌/上漲標籤比例增加
#   - 整體標籤分布更均衡
#
# 注意事項：
#   - 過濾會減少總樣本數（權衡取捨）
#   - 建議先用 --stats-only 查看分布再決定閾值
#   - 可配合 triple_barrier 參數微調達到最佳效果
# ===================================================================

