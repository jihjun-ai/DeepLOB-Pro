# ===================================================================
# DeepLOB V7 實驗 1：V7 數據專用配置
# 目標：解決 V7 數據過擬合問題（Epoch 3 後 Val 惡化）
# 核心策略：強正則化 + 慢學習 + 早停
# 日期：2025-10-25
# V7 數據特性：更乾淨、標籤一致性高 → 容易過擬合
# ===================================================================

# ==================== 運行配置 ====================
run:
  seed: 42

# ==================== 標籤配置 ====================
labels:
  num_classes: 3
  class_names: ["下跌", "持平", "上漲"]
  class_names_en: ["down", "stationary", "up"]
  class_ids: [0, 1, 2]
  format: "v5"

  weight_calculation:
    epsilon: 1.0e-6
    normalize: true

# ==================== 可視化配置 ====================
visualization:
  confusion_matrix:
    normalize: true
    dpi: 150
    figsize: [8, 6]
    cmap: "Blues"

# ==================== 數據配置 ====================
data:
  train: "data/processed_v7/npz/stock_embedding_train.npz"
  val: "data/processed_v7/npz/stock_embedding_val.npz"
  test: "data/processed_v7/npz/stock_embedding_test.npz"
  norm_meta: "data/processed_v7/npz/normalization_meta.json"

  v5_labels: true

  y_raw_validation:
    enabled: true
    expected_values: [-1, 0, 1]

  # V7 實驗 1: 保持關閉樣本權重
  use_sample_weights: false
  weights_normalize: "mean_to_1"

  use_stock_ids: false
  fail_on_missing_keys: true

# ==================== DataLoader 配置 ====================
dataloader:
  # V7 實驗 1: 減小 Batch Size (更多梯度更新,減緩過擬合)
  batch_size: 256  # 512 → 256 (降低 50%)
  num_workers: 12
  pin_memory: true

  # 關閉平衡採樣器
  balance_sampler:
    enabled: false
    strategy: "inv_freq"

# ==================== 模型配置 ====================
model:
  arch: "DeepLOB"

  input:
    shape: [100, 20]

  num_classes: 3

  # V7 實驗 1: 減小模型容量 (降低過擬合風險)
  conv1_filters: 32  # 48 → 32 (降回基準)
  conv2_filters: 32  # 48 → 32
  conv3_filters: 32  # 48 → 32

  # V7 實驗 1: 減小 LSTM/FC 容量
  lstm_hidden_size: 48  # 64 → 48 (介於 32-64)
  fc_hidden_size: 48    # 64 → 48

  # V7 實驗 1: 大幅提高 Dropout (V7 數據更易過擬合)
  dropout: 0.75  # 0.70 → 0.75 (+7%)

  embeddings:
    enabled: false
    num_stocks: 367
    dim: 16
    dropout: 0.1
    weight_decay: 0.0001
    max_norm: null
    unk_strategy: "explicit_unk"
    feature_dropout:
      p: 0.3
    conditioning: "film"

# ==================== 損失函數配置 ====================
loss:
  type: "ce"

  # V7 實驗 1: 保持關閉類別權重
  class_weights: none

  # V7 實驗 1: 提高標籤平滑 (強正則化)
  label_smoothing:
    global: 0.02  # 0.015 → 0.02 (+33%)
    flat_bonus: 0.00

# ==================== 優化器配置 ====================
optim:
  name: "adamw"

  # V7 實驗 1: 大幅降低學習率 (慢學習,避免過擬合) ⭐ 核心修改
  # V7 數據更乾淨 → 需要更小學習率
  lr: 0.000001  # 2.5e-6 → 1e-6 (-60%)

  # V7 實驗 1: 大幅提高 Weight Decay (強 L2 正則化) ⭐ 核心修改
  weight_decay: 0.002  # 0.001 → 0.002 (+100%)

  # V7 實驗 1: 放寬梯度裁剪 (LR 已降低,梯度應更小)
  grad_clip: 2.0  # 1.5 → 2.0 (恢復寬鬆)

  amp: false
  use_bf16: false

  betas: [0.9, 0.999]
  eps: 1.0e-8
  amsgrad: false

# ==================== 學習率調度器 ====================
sched:
  name: "cosine"

  # V7 實驗 1: 延長 Warmup (更平滑的學習率上升)
  warmup_ratio: 0.30  # 0.20 → 0.30 (6/20 epochs)
  warmup_start_factor: 0.2  # 0.333 → 0.2 (起點更低: 2e-7)

  # V7 實驗 1: 降低最小學習率 (配合低初始 LR)
  eta_min: 0.0000003  # 1e-6 → 3e-7 (-70%)

# ==================== 訓練配置 ====================
train:
  # V7 實驗 1: 縮短訓練期 (V7 過擬合快,不需要 20 epochs)
  epochs: 15  # 20 → 15 (Epoch 3 已達峰值)
  accumulate_steps: 1

  # V7 實驗 1: 極激進早停 ⭐ 核心修改
  # Epoch 3 達最佳 → Patience=1 足夠
  early_stop:
    metric: "val.f1_macro_weighted"
    patience: 1  # 2 → 1 (Epoch 4 就停)
    mode: "max"
    min_delta: 0.0005  # 0.0008 → 0.0005 (更敏感)

# ==================== 評估配置 ====================
eval:
  group_split:
    by_stock: true

  metrics:
    unweighted: ["acc", "f1_macro", "per_class_pr_rc", "confusion"]
    weighted: ["f1_macro", "loss"]

  breakdowns: ["reasons", "t_hit_bucket", "ret_quantile", "stock"]
  thit_buckets: [0, 5, 10, 20, 100]
  ret_quantiles: [0.8, 0.9, 0.95]

# ==================== 校準配置 ====================
calibration:
  enabled: true
  type: "temperature"
  opt_metric: "weighted_nll"
  lr: 0.01
  max_iter: 50

# ==================== 推理配置 ====================
inference:
  decision: "argmax"
  cost_matrix:
    path: null
  hold_threshold: 0.0

# ==================== 日誌配置 ====================
logging:
  dir: "logs/deeplob_v7_exp1"
  save_best_by: "val.f1_macro_weighted"

  artifacts:
    - "model"
    - "norm_meta"
    - "label_mapping"
    - "calibration"
    - "cost_matrix"
    - "metrics_json"
    - "logs_csv"
    - "confmat_png"

  wandb:
    enabled: false
    project: "deeplob-v7-exp1"
    entity: null

# ==================== 安全檢查 ====================
safety_checks:
  validate_label_set: true
  validate_weights: true
  validate_norm_meta: true
  print_data_summary: true

# ==================== 硬體配置 ====================
hardware:
  device: "cuda"
  num_workers: 12
  pin_memory: true
  prefetch_factor: 4
  persistent_workers: true
  enable_tf32: true

# ==================== 續訓配置 ====================
resume:
  enabled: false
  checkpoint_path: "checkpoints/v5/deeplob_v5_best.pth"
  load_optimizer: true

# ==================== 其他配置 ====================
misc:
  save_last: true
  output_dir: "checkpoints/v5"

# ===================================================================
# V7 實驗 1 修改總結
# ===================================================================
# 核心問題：V7 數據更乾淨 → 嚴重過擬合 (Epoch 3 後 Val 惡化)
#
# 修改策略：強正則化 + 慢學習 + 早停
#
# 核心改動（12 個參數）：
# 1. batch_size: 512 → 256 (-50%, 更多梯度更新)
# 2. conv_filters: 48 → 32 (-33%, 降低容量)
# 3. lstm_hidden_size: 64 → 48 (-25%)
# 4. fc_hidden_size: 64 → 48 (-25%)
# 5. dropout: 0.70 → 0.75 (+7%, 更強正則化) ⭐
# 6. label_smoothing: 0.015 → 0.02 (+33%)
# 7. lr: 2.5e-6 → 1e-6 (-60%, 慢學習) ⭐⭐⭐ 核心
# 8. weight_decay: 0.001 → 0.002 (+100%, 強 L2) ⭐⭐⭐ 核心
# 9. grad_clip: 1.5 → 2.0 (+33%, LR 低可放寬)
# 10. warmup_ratio: 0.20 → 0.30 (+50%, 更平滑)
# 11. eta_min: 1e-6 → 3e-7 (-70%)
# 12. epochs: 20 → 15, patience: 2 → 1 ⭐⭐⭐ 核心
#
# 預期效果：
# - Epoch 3-5 達最佳 (vs 目前 Epoch 3)
# - Val Acc 52-55% (vs 目前 50.09%)
# - Train-Val Gap < 5% (vs 目前 11.30%)
# - 梯度 < 3.0 (vs 目前 5.12)
#
# 訓練指令：
# conda activate deeplob-pro
# python scripts/train_deeplob_v5.py --config configs/train_v5.yaml
# ===================================================================
