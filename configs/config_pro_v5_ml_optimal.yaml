# V5 Pro - 機器學習最佳化配置（防跨日污染版）
# 設計理念：以 DeepLOB 模型學習為核心，優化類別可區分性
version: "5.0.3-ml-optimal-fixed"
description: "針對 DeepLOB CNN-LSTM 模型優化的 Triple-Barrier 配置（修復跨日污染問題）"

# ===================================================================
# 設計原理
# ===================================================================
# 1. 類別分佈目標：30% / 40% / 30% (下跌/持平/上漲)
#    - 持平略多：最難學習的類別，需要更多樣本
#    - 下跌/上漲對稱：確保模型不偏向多/空
#
# 2. 閾值設計：基於台股 LOB 實證數據
#    - min_return: 0.0008 (0.08%) = 約 0.8 個 tick
#    - 比 V4 的 0.2% 更敏感，但比原始 0.01% 更嚴格
#    - 符合高頻交易「小趨勢也要捕捉」的需求
#
# 3. 邊界設計：適度寬鬆避免誤觸發
#    - 3.5σ 邊界：只有真正的趨勢才會觸發
#    - 比 2σ 寬鬆（減少噪音），比 5σ 嚴格（保留信號）
#
# 4. 時間窗口：快速決策
#    - max_holding: 60 bars = 600 個原始事件
#    - 約 30-60 秒（取決於市場活躍度）
#    - 符合高頻交易的時間尺度
# ===================================================================

# ===================================================================
# 核心修正：防止跨日污染
# ===================================================================
respect_day_boundary: true  # 強制啟用日界線保護（預設 true）
# 效果：
#   1. 波動率每日重置（EWMA/GARCH 不跨夜累積）
#   2. Triple-Barrier 的 vertical 限制在當日最後一根
#   3. 滑窗禁止跨日（昨天尾盤 + 今天開盤不視為連續）
#   4. 「時間到」樣本回歸正常比例 → Class 1（持平）自然出現

# A.2: 滑窗品質過濾（避免過度 ffill 的假訊號）
ffill_quality_threshold: 0.5  # 滑窗內 ffill 占比 > 50% 則跳過
# 說明：
#   - ffill (mask=1) 是前向填充的值，非真實報價
#   - 過多 ffill 表示該時段市場不活躍，可能產生假訊號
#   - 建議值：0.5（50%），可根據實際情況調整（0.3-0.7）

# ⚡ 性能優化：Triple-Barrier 降採樣
tb_stride: 10  # 每 N 個點計算一次 TB（降低 90% 計算量）
# 說明：
#   - 滑窗會產生大量重疊樣本，不需要對每個點都算 TB
#   - tb_stride=10 → 計算量降為 1/10，速度提升 10 倍
#   - 標籤通過 ffill 填充到所有時間點
#   - 建議值：5-20（越大越快，但標籤更新頻率越低）

# ===================================================================
# 標準化設定（新增：解決分布漂移問題）
# ===================================================================
normalization:
  method: 'rolling_zscore'  # 滾動窗口 Z-Score（替代全局標準化）
  window: 100               # 滾動窗口大小（100 bars ≈ 10-20 分鐘）
  min_periods: 20           # 最小有效樣本數（warm-up 期）
  # 說明：
  #   - 全局標準化問題：假設分布靜態，無法適應市場變化 → PSI 漂移
  #   - 滾動窗口優勢：
  #       1. 適應市場狀態變化（均值/標準差隨時間更新）
  #       2. 減少分布漂移（預期 PSI < 0.1）
  #       3. 符合實際交易（只用歷史數據）
  #   - window=100: 使用最近 100 個 tick 計算統計量
  #   - min_periods=20: 前 20 個點使用 expanding window

# 波動率設定
volatility:
  method: 'ewma'  # EWMA 對高頻數據反應更快
  halflife: 60    # 60 bars 半衰期 ≈ 5-10 分鐘（每日重置）

# Triple-Barrier 參數（修正版：重新校準以適應按日處理）
triple_barrier:
  # 標籤方法選擇：
  #   - 'triple_barrier': 高頻交易標籤（適合短線，10-20次/天）
  #   - 'trend_adaptive': 自適應趨勢標籤（適合波段，1-2次/天，較不穩定）
  #   - 'trend_stable': 穩定趨勢標籤（適合波段，減少震盪區間誤判）✅ 推薦
  labeling_method: 'trend_stable'  # 預設使用穩定版趨勢標籤

  # === Triple-Barrier 參數（labeling_method='triple_barrier'） ===
  pt_multiplier: 2.5   # 止盈：2.5σ（修正後建議值）
  sl_multiplier: 2.5   # 止損：2.5σ（對稱設計）
  max_holding: 40      # 最大持有：40 bars（考慮日內限制）
  min_return: 0.0025   # 閾值：0.25%（只用於 vertical）

  # === 趨勢標籤參數（labeling_method='trend_adaptive' or 'trend_stable'） ===
  trend_labeling:
    lookforward: 120          # 趨勢評估窗口（秒，1Hz數據）
    vol_multiplier: 2.5       # 進入趨勢門檻（倍數，基於波動率）

    # 以下參數僅在 labeling_method='trend_stable' 時生效
    hysteresis_ratio: 0.6     # 退出門檻比例（0.6 → 退出=2.5*0.6=1.5σ）
    smooth_window: 21         # 多數票平滑窗口（秒，奇數）⬆️ 從15調到21
    min_trend_duration: 45    # 方向連續維持最短長度（秒）⬆️ 從30調到45

    # 【效果說明】trend_stable vs trend_adaptive（v2.0 - 2025-10-23 強化版）
    # - trend_adaptive: 單點判定，震盪區間頻繁翻轉（問題）
    # - trend_stable v2.0: 遲滯+持續性+平滑+絕對地板+方向一致性（大幅改善）
    #   · 進入趨勢：需連續45秒超過2.5σ（且未來60%步數同號）
    #   · 退出趨勢：需連續45秒回到1.5σ內（或方向一致性<40%）
    #   · 多數票平滑：21秒窗口消除單根雜訊
    #   · 絕對地板：0.20%進入/0.10%退出（避免低波動誤判）
    #   · 結果：切換次數↓70-85%，Neutral區間↑↑（震盪日>70%）

# 樣本權重（幫助模型學習困難樣本）
sample_weights:
  enabled: false        # 啟用權重
  tau: 80.0            # 時間衰減（稍快，強調近期數據）
  return_scaling: 1.0  # 🔧 縮放係數（搭配 use_log_scale）
  balance_classes: true # 類別平衡（自動補償不平衡）
  use_log_scale: true  # ✅ 使用對數縮放（避免小收益被壓制）
  # 修正說明（v3 - 最終版本）：
  #   問題診斷：
  #     - return_scaling=12.0 → Class 1 權重 ≈ 0（完全崩潰）
  #     - return_scaling=2.0  → Class 1 仍只有 1/12（不平衡比 7.92x）
  #     - return_scaling=1.0  → Class 1 仍只有 1/12（線性縮放不夠）
  #
  #   最終方案：對數縮放 log(1 + |return| * 1000)
  #     - Class 0: |ret|=0.0025 → log(3.5) ≈ 1.25
  #     - Class 1: |ret|=0.0002 → log(1.2) ≈ 0.18
  #     - Class 2: |ret|=0.0030 → log(4.0) ≈ 1.39
  #     - 比例：1.25 : 0.18 : 1.39 ≈ 7:1:8 （比線性的 12:1:15 好很多）
  #     - 再加上 balance_classes，預期不平衡比 < 3x ✅

# 輸出設定
output:
  save_meta: true         # 保存完整 metadata
  save_weights: true      # 保存樣本權重
  compression: 'compressed'  # 壓縮以節省空間

# 資料處理參數
data:
  aggregation_factor: 10  # 10 事件聚合
  seq_len: 100            # 100 timesteps（DeepLOB 標準）
  alpha: 0.002            # 保留（兼容性）
  horizons: [1, 2, 3, 5, 10]
  trading_start: 90000    # 09:00:00
  trading_end: 133000     # 13:30:00

# 資料切分（按股票隨機切分，避免分布偏移）
split:
  train_ratio: 0.7   # 70% 訓練
  val_ratio: 0.15    # 15% 驗證
  test_ratio: 0.15   # 15% 測試
  seed: 42           # 隨機種子（確保可復現性）

# ===================================================================
# 預期效果（修正後）
# ===================================================================
# 類別分佈（預期）：
#   - Class 0 (下跌): 25-35%
#   - Class 1 (持平): 35-45%  ← 修正後應大幅增加
#   - Class 2 (上漲): 25-35%
#
# 核心改進：
#   1. 跨日污染消除 → 標籤準確性提升
#   2. 「時間到」樣本回歸 → Class 1 自然出現
#   3. min_return 只影響 vertical → 標籤分布穩定
#   4. 日內波動率重置 → 風險估計更準確
#
# 模型學習優勢：
#   1. 足夠的持平樣本 → 學會「不交易」
#   2. 對稱的上漲/下跌 → 避免偏差
#   3. 無跨日資料洩漏 → 泛化能力提升
#   4. 樣本權重輔助 → 困難樣本加權
#
# 訓練建議：
#   - 使用 Focal Loss 或 CrossEntropy（視實際分布調整）
#   - 啟用平衡採樣器（可選）
#   - 監控 per-class F1 和 Recall（確保三類都學到）
#   - 特別關注 Class 1 的召回率（避免橫盤誤交易）
# ===================================================================
