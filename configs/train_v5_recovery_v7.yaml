# ===================================================================
# DeepLOB V5 Recovery V7 - 提高學習率 + 最小容量
# 基於實驗 #6 失敗經驗：LR過低導致 Epoch 1 達峰值
# ===================================================================

# ==================== 基礎配置 ====================
run:
  seed: 42

labels:
  num_classes: 3
  class_names: ["下跌", "持平", "上漲"]
  class_names_en: ["down", "stationary", "up"]
  class_ids: [0, 1, 2]
  format: "v5"

  weight_calculation:
    epsilon: 1.0e-6
    normalize: true

visualization:
  confusion_matrix:
    normalize: true
    dpi: 150
    figsize: [8, 6]
    cmap: "Blues"

data:
  train: "data/processed_v5_balanced/npz/stock_embedding_train.npz"  # 回到 balanced
  val: "data/processed_v5_balanced/npz/stock_embedding_val.npz"
  test: "data/processed_v5_balanced/npz/stock_embedding_test.npz"
  norm_meta: "data/processed_v5_balanced/npz/normalization_meta.json"

  v5_labels: true
  y_raw_validation:
    enabled: true
    expected_values: [-1, 0, 1]

  use_sample_weights: false  # 關閉異常權重
  weights_normalize: "mean_to_1"
  use_stock_ids: false
  fail_on_missing_keys: true

# ==================== DataLoader 配置 ====================
dataloader:
  batch_size: 512
  num_workers: 4
  pin_memory: true

  balance_sampler:
    enabled: false
    strategy: "inv_freq"

# ==================== 模型配置 ====================
model:
  arch: "DeepLOB"
  input:
    shape: [100, 20]
  num_classes: 3

  # 🔧 最小容量（對抗過擬合）
  conv1_filters: 32
  conv2_filters: 32
  conv3_filters: 32
  lstm_hidden_size: 32  # 🔧 最小 (48→32)
  fc_hidden_size: 32    # 🔧 最小 (48→32)
  dropout: 0.7          # 🔧 最強 (0.6→0.7)

  embeddings:
    enabled: false

# ==================== 損失函數配置 ====================
loss:
  type: "ce"

  class_weights: "auto"  # 自動權重

  label_smoothing:
    global: 0.15  # 保持強平滑
    flat_bonus: 0.0

# ==================== 優化器配置 ====================
optim:
  name: "adamw"
  lr: 0.0001            # 🔧 提高 (0.00005→0.0001) - 解決 Epoch 1 達峰值
  weight_decay: 0.001   # 保持強L2
  grad_clip: 0.5
  amp: false
  use_bf16: false
  betas: [0.9, 0.999]
  eps: 1.0e-8
  amsgrad: false

# ==================== 學習率調度器 ====================
sched:
  name: "cosine"
  warmup_ratio: 0.15
  eta_min: 5.0e-6

# ==================== 訓練配置 ====================
train:
  epochs: 50
  accumulate_steps: 1

  early_stop:
    metric: "val.f1_macro_unweighted"
    patience: 10      # 🔧 更快止損 (12→10)
    mode: "max"

# ==================== 評估配置 ====================
eval:
  group_split:
    by_stock: true

  metrics:
    unweighted: ["acc", "f1_macro", "per_class_pr_rc", "confusion"]
    weighted: ["f1_macro", "loss"]

  breakdowns: ["reasons", "t_hit_bucket", "ret_quantile", "stock"]
  thit_buckets: [0, 5, 10, 20, 100]
  ret_quantiles: [0.8, 0.9, 0.95]

# ==================== 校準配置 ====================
calibration:
  enabled: true
  type: "temperature"
  opt_metric: "weighted_nll"
  lr: 0.01
  max_iter: 50

# ==================== 推理配置 ====================
inference:
  decision: "argmax"
  cost_matrix:
    path: null
  hold_threshold: 0.0

# ==================== 日誌配置 ====================
logging:
  dir: "logs/deeplob_v5_recovery_v7"
  save_best_by: "val.f1_macro_unweighted"

  artifacts:
    - "model"
    - "norm_meta"
    - "label_mapping"
    - "calibration"
    - "cost_matrix"
    - "metrics_json"
    - "logs_csv"
    - "confmat_png"

  wandb:
    enabled: false

# ==================== 安全檢查 ====================
safety_checks:
  validate_label_set: true
  validate_weights: true
  validate_norm_meta: true
  print_data_summary: true

# ==================== 硬件配置 ====================
hardware:
  device: "cuda"
  num_workers: 4
  pin_memory: true
  prefetch_factor: 2
  persistent_workers: true

# ==================== 續訓配置 ====================
resume:
  enabled: false
  checkpoint_path: "checkpoints/v5_recovery_v7/deeplob_v5_best.pth"
  load_optimizer: true

# ==================== 其他配置 ====================
misc:
  save_last: true
  output_dir: "checkpoints/v5_recovery_v7"

# ===================================================================
# 實驗 #7 - V7 調整總結
# ===================================================================
# 基於實驗 #6 (Val Acc 45.80% E1, LR過低) 的改進：
#
# 關鍵改動：
# 1. 🔥 LR：0.00005→0.0001 (解決 Epoch 1 達峰值)
# 2. ✅ LSTM/FC：48→32 (最小容量，對抗過擬合)
# 3. ✅ Dropout：0.6→0.7 (最強正則化)
# 4. ✅ Patience：12→10 (更快止損)
# 5. ✅ 數據集：v5→balanced (性能相同，分布更均勻)
#
# 預期效果：
#   - Epoch 1 不應達峰值（LR 提高後）
#   - Val Acc 穩定提升至 15-20 epochs
#   - 過擬合延緩（LSTM/FC 降至 32）
#   - 目標 Val Acc > 47%（突破天花板）
#   - Train-Val 差距 < 20%
#
# 使用方法：
#   python scripts/train_deeplob_v5.py \
#       --config configs/train_v5_recovery_v7.yaml \
#       --data-dir ./data/processed_v5_balanced/npz \
#       --epochs 50
# ===================================================================
