conda activate deeplob-pro

scripts\batch_preprocess.bat

步驟 2: 生成訓練數據（已修復洩漏 ✅）

**目的**: 從 NPZ 生成訓練數據（已修復 bfill 洩漏）
python scripts\extract_tw_stock_data_v6.py --preprocessed-dir data\preprocessed_v5_1hz --output-dir data\processed_v6 --config configs\config_pro_v5_ml_optimal.yaml




##取資料
python scripts/extract_tw_stock_data_v5.py
##只統計不生成資料# 僅統計模式（待實作）
python scripts/extract_tw_stock_data_v5.py --input-dir ./data/temp --output-dir ./data/volatility_only --config configs/config_pro_v5_balanced_optimal.yaml --stats-only  

python scripts/extract_tw_stock_data_v5.py --input-dir ./data/temp --output-dir ./data/processed_v5_fixed --config ./configs/config_pro_v5_ml_optimal.yaml 
python scripts/extract_tw_stock_data_v5.py --config configs/config_pro_v5_ml_optimal.yaml --output ./data/processed_v5_fixed

### 檢查權重
python diagnose_weights_emergency.py 


##檢查資料健康度
python scripts/check_data_health_v5.py --data-dir ./data/processed_v5_fixed/npz --save-report --plot --verbose



###測試
python scripts/preprocess_single_day.py --input ./data/temp/20250901.txt --output-dir ./data/preprocessed_v5_1hz --config ./configs/config_pro_v5_ml_optimal.yam





# 基础训练（使用默认配置）
python scripts/train_deeplob_v5.py --config configs/train_v5.yaml

###目前最好配置
python scripts/train_deeplob_v5.py --config configs/train_v5_fix_moderate.yaml --data-dir ./data/processed_v5_balanced/npz --epochs 40
python scripts/train_deeplob_v5.py --config configs/train_v5_fix_moderate.yaml --data-dir ./data/processed_v5_balanced/npz --epochs 60
python scripts/train_deeplob_v5.py --config configs/train_v5_recovery.yaml --data-dir ./data/processed_v5_balanced/npz  --epochs 50
python scripts/train_deeplob_v5.py --config configs/train_v5_recovery.yaml --data-dir ./data/processed_v5/npz --epochs 50
python scripts/train_deeplob_v5.py --config configs/train_v5_recovery.yaml --data-dir ./data/processed_v5_balanced/npz --epochs 50
python scripts/train_deeplob_v5.py --config configs/train_v5_recovery_v6.yaml --data-dir ./data/processed_v5/npz --epochs 50
python scripts/train_deeplob_v5.py --config configs/train_v5_recovery_v7.yaml --data-dir ./data/processed_v5_balanced/npz --epochs 50

python scripts/train_deeplob_v5.py --config configs/train_v5_recovery.yaml --data-dir ./data/processed_v5_fixed/npz --epochs 50



##篩選 2% 震盪資料
python scripts/extract_tw_stock_data_v5.py --config configs/config_pro_v5_filter2.0.yaml --output-dir ./data/processed_v5_filter2.0

步驟 1: 快速驗證（5-10 分鐘）
python scripts/verify_fix_v5.py --input-dir ./data/temp --output-dir ./data/test_fix --max-files 5







取資料
##新版本
python scripts/extract_tw_stock_data_v3.py --auto-alpha --relativize --no-cross-day --use-k-buffer --save-normalizer --enforce-label-health-day --alpha-min 0.0005 --alpha-max 0.01

###檢查資料是否有 price 
python check_data_keys.py

檢查數據
python scripts/check_processed_data.py

## 訓練 deeplob
python scripts/train_deeplob_generic.py --config configs/deeplob_generic_config.yaml --epochs 30 --early-stop --test-after-train

## 分析deeplob 數據
python scripts\monitor_deeplob.py --log-dir logs/deeplob_v5_fixed











conda activate deeplob

##提取資料前先測試alpha值
python test_alpha_values.py
##提取數據

##V3
python scripts/extract_tw_stock_data_v3.py --temp-dir data/temp --output-dir data/processed --min-ticks 1000 --seq-len 100 --k 50 --alpha-auto-p 0.33 --alpha-min 0.0005 --alpha-max 0.01 --rolling-days 5 --split-mode temporal --max-samples-per-stock-per-day 15000 --enforce-label-health-day --max-class-ratio 0.75 --clip-outliers --clip-sigma 5.0 --clip-mode post

###方案B：完整重訓（最佳品質）
python scripts/extract_tw_stock_data_v3.py --temp-dir data/temp --output-dir data/processed --min-ticks 1000 --seq-len 100 --k 20 --alpha 0.003 --alpha-min 0.002 --alpha-max 0.005 --rolling-days 5 --split-mode temporal --max-samples-per-stock-per-day 15000 --enforce-label-health-day  --max-class-ratio 0.60 --clip-outliers --clip-sigma 5.0 --clip-mode post

##新版本
python scripts/extract_tw_stock_data_v3.py --auto-alpha --relativize --no-cross-day --use-k-buffer --save-normalizer

##模型測試
python scripts/train_deeplob_generic.py --config configs/deeplob_generic_config.yaml --test-only --resume checkpoints/deeplob_generic_best.pth


##自動批次
REEXTRACT_DATA.bat


檢查數據
python scripts/check_processed_data.py

"""特徵異常值診斷腳本
python scripts/diagnose_features.py

步驟 1: 快速測試（1 epoch，約 3-5 分鐘）
python scripts/train_deeplob_generic.py --config configs/deeplob_generic_config.yaml --epochs 1 --early-stop --early-stop-patience 5

正常執行(訓練)
python scripts/train_deeplob_generic.py --config configs/deeplob_generic_config.yaml --epochs 30 --early-stop --test-after-train

完美！現在您可以執行這個測試腳本：
python scripts/test_best_model.py


### RL ppo
    # 完整訓練 (500 迭代)
    python scripts/train_rl.py --num-iterations 500 --num-workers 16
	python scripts/train_rl.py --num-iterations 500 --num-workers  4 --num-gpus 1 --no-resume

### RL 訓練後
快速評估

python scripts/evaluate_rl_quick.py --num-episodes 10


檢查 1: 測試真實台股成本（關鍵！）
python scripts/evaluate_rl_quick.py --num-episodes 100 --transaction-cost 0.00442 --data-mode test




# 1. 刪除無效的舊模型(新訓) 
#rm checkpoints/*.pth

# 2. 重新訓練（使用修正後的腳本） == 棄用
#python scripts/train_deeplob_stock_embedding.py

##建立通用腳本
# 1. 執行訓練（30 epochs，預計 2-4 小時）
python scripts/train_deeplob_generic.py --config configs/deeplob_generic_config.yaml --early-stop 

python scripts/train_deeplob_generic.py --config configs/deeplob_generic_config.yaml --early-stop --early-stop-patience 10 --test-after-train

#python scripts/train_deeplob_generic.py --config configs/deeplob_generic_config.yaml

python scripts/train_deeplob_generic.py --config configs/deeplob_generic_config.yaml --early-stop --early-stop-patience 10 --test-after-train

⚠️  發現 1 個問題：
  1. ❌ 特徵尺度差異大：最大標準差 (5.63) 是最小標準差 (1.87) 的 3.0 倍
python scripts/clip_features.py --process-all --threshold 5.0




最佳解決方案：在標準化後加入 Clipping
tensorboard --logdir=logs/deeplob_stock_embedding --port=6006




# 3. 驗證新模型
python scripts/quick_validate_deeplob.py


epoch,train_loss,val_loss,train_acc,val_acc,val_f1_weighted,val_f1_unweighted,learning_rate,grad_norm
1,0.7987307906150818,0.7919617891311646,49.182308197021484,43.887115478515625,0.2875753939151764,0.25115132331848145,9.999999747378752e-06,1.5502980947494507
2,0.7665883302688599,0.7976163029670715,51.51401901245117,44.316749572753906,0.2971945106983185,0.27230051159858704,9.999999747378752e-06,3.1919379234313965
3,0.7420251369476318,0.8140880465507507,53.24542236328125,44.636287689208984,0.2906172573566437,0.2761491537094116,9.990365470002871e-06,4.740970611572266
4,0.723126232624054,0.8068568110466003,54.569007873535156,45.272682189941406,0.29225191473960876,0.25706952810287476,9.961501746147405e-06,5.861896991729736
5,0.7075530290603638,0.8310534954071045,55.67066192626953,44.39999008178711,0.289841890335083,0.26333391666412354,9.9135340860812e-06,7.095327854156494
6,0.6934853196144104,0.8235187530517578,56.55953598022461,44.39730453491211,0.3019418716430664,0.26798319816589355,9.84666621661745e-06,7.996488094329834
7,0.6819179058074951,0.8234961032867432,57.301273345947266,44.289894104003906,0.30491113662719727,0.2711905241012573,9.761185538081918e-06,8.564196586608887
8,0.6723607182502747,0.8343353867530823,58.05182647705078,44.17443084716797,0.30495917797088623,0.26567500829696655,9.657457667344715e-06,9.202162742614746
9,0.6613153219223022,0.8354265689849854,58.72276306152344,44.861846923828125,0.3311336040496826,0.2927972674369812,9.53592734731501e-06,9.572954177856445
10,0.6541734933853149,0.8467395901679993,59.282657623291016,44.70341873168945,0.3213898241519928,0.2775239646434784,9.397113899467513e-06,10.139341354370117
11,0.6469659805297852,0.8513118028640747,59.73355484008789,44.38119125366211,0.30419978499412537,0.28217193484306335,9.241613042831887e-06,10.409748077392578
12,0.6396899223327637,0.845499575138092,60.27709197998047,45.065921783447266,0.3185606598854065,0.2739749550819397,9.070089618035126e-06,10.750947952270508
13,0.6328029036521912,0.8463041186332703,60.72526931762695,44.70878982543945,0.31579840183258057,0.275478333234787,8.883279406290967e-06,10.723734855651855
14,0.62739098072052,0.8563005328178406,61.188419342041016,43.52460861206055,0.2943263351917267,0.2728768587112427,8.681980943947565e-06,10.9786376953125
15,0.6179840564727783,0.8507980704307556,61.54817199707031,44.00794982910156,0.3061577379703522,0.2781415283679962,8.4670564319822e-06,11.198664665222168
16,0.6149929761886597,0.8429659605026245,61.890682220458984,44.51008224487305,0.3158515691757202,0.2887474298477173,8.239426279033069e-06,11.226245880126953
17,0.6100006699562073,0.8605478405952454,62.21994400024414,44.308692932128906,0.30754220485687256,0.2681712210178375,8.000066372915171e-06,11.486167907714844
18,0.6025429368019104,0.869534432888031,62.591392517089844,45.082035064697266,0.323115736246109,0.28042128682136536,7.749999895168003e-06,11.896492958068848
19,0.6009679436683655,0.8505627512931824,62.98967742919922,45.37203598022461,0.31838124990463257,0.28368139266967773,7.490299140044954e-06,11.88705825805664
請依訓練數據調整
參數檔:train_v5.yaml
參考歷史調參資料(20251018-調參歷史.md)



編碼問題 - 中文註解和 echo 導致亂碼
路徑問題 - 相對路徑在不同目錄執行會失敗
特殊字元 - ✅ ❌ 等 emoji 會顯示為亂碼